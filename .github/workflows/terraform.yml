# This is a basic workflow to help you get started with Actions

name: Terraform Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    paths:
      - 'env/**'
  pull_request:
    paths:
      - 'env/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (prod and non-prod)"
        required: true
        default: "non-prod"


jobs:
  terraform:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env:
          - non-prod
          - prod

    defaults:
      run:
        working-directory: env/${{ matrix.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan

      - name: Terraform Apply (non-prod auto)
        if: matrix.env == 'non-prod'
        run: terraform apply -input=false -auto-approve tfplan

      - name: Terraform Apply (prod requires approval)
        if: matrix.env == 'prod'
        environment: prod   # üîê Protected environment in GitHub settings
        run: terraform apply -input=false -auto-approve tfplan
 
