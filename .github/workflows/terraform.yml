# This is a basic workflow to help you get started with Actions

name: Terraform Deploy

# Controls when the workflow will run
on:
  push:
    branches: ["main"]

  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Environment to deploy (prod and non-prod)"
        options: 
          - non-prod
          - prod
        required: true
        default: "non-prod"


jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event_name == 'push' && 'non-prod' || github.event.inputs.environment }}

    defaults:
      run:
        working-directory: env/${{ github.event_name == 'push' && 'non-prod' || github.event.inputs.environment }}


    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "asia-south-1"
          
      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan



  terraform-apply:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.event_name == 'push' && 'non-prod' || github.event.inputs.environment }}

    defaults:
      run:
        working-directory: env/${{ github.event_name == 'push' && 'non-prod' || github.event.inputs.environment }} 
    steps:
    
      - name: Terraform Apply 
        run: terraform apply -input=false -auto-approve tfplan        

